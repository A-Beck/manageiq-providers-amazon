---
http_interactions:
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeInstances&Filter.1.Name=instance-id&Filter.1.Value.1=i-0bca58e6e540ddc39&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121327Z
      X-Amz-Content-Sha256:
      - 4efa04d6e2aa3ed14177c046b7a33785577a351caac6112ef227925480ccb604
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=5f52e2552d773be35f024bfda7a0194cf17d4e891a33e6720e6a735567603909
      Content-Length:
      - '106'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:28 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeInstancesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>16b6f732-c257-44ff-a7b1-140563c1b789</requestId>
            <reservationSet>
                <item>
                    <reservationId>r-0c0e56163429b9a46</reservationId>
                    <ownerId>200278856672</ownerId>
                    <groupSet/>
                    <instancesSet>
                        <item>
                            <instanceId>i-0bca58e6e540ddc39</instanceId>
                            <imageId>ami-6869aa05</imageId>
                            <instanceState>
                                <code>16</code>
                                <name>running</name>
                            </instanceState>
                            <privateDnsName>ip-10-2-0-239.ec2.internal</privateDnsName>
                            <dnsName/>
                            <reason/>
                            <keyName>EmsRefreshSpec-KeyPair</keyName>
                            <amiLaunchIndex>0</amiLaunchIndex>
                            <productCodes/>
                            <instanceType>t2.nano</instanceType>
                            <launchTime>2017-05-03T10:47:06.000Z</launchTime>
                            <placement>
                                <availabilityZone>us-east-1c</availabilityZone>
                                <groupName/>
                                <tenancy>default</tenancy>
                            </placement>
                            <monitoring>
                                <state>disabled</state>
                            </monitoring>
                            <subnetId>subnet-2190b144</subnetId>
                            <vpcId>vpc-8cf117f5</vpcId>
                            <privateIpAddress>10.2.0.239</privateIpAddress>
                            <ipAddress>34.202.178.10</ipAddress>
                            <sourceDestCheck>true</sourceDestCheck>
                            <groupSet>
                                <item>
                                    <groupId>sg-76c10f08</groupId>
                                    <groupName>EmsRefreshSpecStack-InstanceSecurityGroup-QS2FPLKQ8HEF</groupName>
                                </item>
                            </groupSet>
                            <architecture>x86_64</architecture>
                            <rootDeviceType>ebs</rootDeviceType>
                            <rootDeviceName>/dev/xvda</rootDeviceName>
                            <blockDeviceMapping>
                                <item>
                                    <deviceName>/dev/xvda</deviceName>
                                    <ebs>
                                        <volumeId>vol-0628a6ce987d4cb6e</volumeId>
                                        <status>attached</status>
                                        <attachTime>2017-05-03T10:47:07.000Z</attachTime>
                                        <deleteOnTermination>true</deleteOnTermination>
                                    </ebs>
                                </item>
                            </blockDeviceMapping>
                            <virtualizationType>hvm</virtualizationType>
                            <clientToken>EmsRe-WebSe-1229KQXQO3HUK</clientToken>
                            <tagSet>
                                <item>
                                    <key>Application</key>
                                    <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S/d3bb46b0-2fed-11e7-a3d9-503f23fb55fe</value>
                                </item>
                                <item>
                                    <key>EmsRefreshSpecStack-key2</key>
                                    <value>EmsRefreshSpecStack-value2</value>
                                </item>
                                <item>
                                    <key>aws:cloudformation:stack-id</key>
                                    <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S/d3bb46b0-2fed-11e7-a3d9-503f23fb55fe</value>
                                </item>
                                <item>
                                    <key>aws:cloudformation:stack-name</key>
                                    <value>EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S</value>
                                </item>
                                <item>
                                    <key>EmsRefreshSpecStack-key1</key>
                                    <value>EmsRefreshSpecStack-value1</value>
                                </item>
                                <item>
                                    <key>aws:cloudformation:logical-id</key>
                                    <value>WebServerInstance</value>
                                </item>
                            </tagSet>
                            <hypervisor>xen</hypervisor>
                            <networkInterfaceSet>
                                <item>
                                    <networkInterfaceId>eni-8fefae9b</networkInterfaceId>
                                    <subnetId>subnet-2190b144</subnetId>
                                    <vpcId>vpc-8cf117f5</vpcId>
                                    <description/>
                                    <ownerId>200278856672</ownerId>
                                    <status>in-use</status>
                                    <macAddress>02:a3:b9:61:d3:ee</macAddress>
                                    <privateIpAddress>10.2.0.239</privateIpAddress>
                                    <sourceDestCheck>true</sourceDestCheck>
                                    <groupSet>
                                        <item>
                                            <groupId>sg-76c10f08</groupId>
                                            <groupName>EmsRefreshSpecStack-InstanceSecurityGroup-QS2FPLKQ8HEF</groupName>
                                        </item>
                                    </groupSet>
                                    <attachment>
                                        <attachmentId>eni-attach-cbd22453</attachmentId>
                                        <deviceIndex>0</deviceIndex>
                                        <status>attached</status>
                                        <attachTime>2017-05-03T10:47:06.000Z</attachTime>
                                        <deleteOnTermination>true</deleteOnTermination>
                                    </attachment>
                                    <association>
                                        <publicIp>34.202.178.10</publicIp>
                                        <publicDnsName/>
                                        <ipOwnerId>200278856672</ipOwnerId>
                                    </association>
                                    <privateIpAddressesSet>
                                        <item>
                                            <privateIpAddress>10.2.0.239</privateIpAddress>
                                            <primary>true</primary>
                                            <association>
                                            <publicIp>34.202.178.10</publicIp>
                                            <publicDnsName/>
                                            <ipOwnerId>200278856672</ipOwnerId>
                                            </association>
                                        </item>
                                    </privateIpAddressesSet>
                                    <ipv6AddressesSet/>
                                </item>
                            </networkInterfaceSet>
                            <ebsOptimized>false</ebsOptimized>
                            <enaSupport>true</enaSupport>
                        </item>
                    </instancesSet>
                </item>
            </reservationSet>
        </DescribeInstancesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:28 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeNetworkInterfaces&Filter.1.Name=network-interface-id&Filter.1.Value.1=eni-8fefae9b&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121329Z
      X-Amz-Content-Sha256:
      - 6662a093749a6961b805d03eb8fe7086f90d5cd1c9277473ddf71df855753f99
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=2e16382d0f03f5432048e40453e0ac9faff5497161d07acc51657dab742690d1
      Content-Length:
      - '116'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:28 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeNetworkInterfacesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>df947d4f-73c7-4467-b487-7e274f9d2f3c</requestId>
            <networkInterfaceSet>
                <item>
                    <networkInterfaceId>eni-8fefae9b</networkInterfaceId>
                    <subnetId>subnet-2190b144</subnetId>
                    <vpcId>vpc-8cf117f5</vpcId>
                    <availabilityZone>us-east-1c</availabilityZone>
                    <description/>
                    <ownerId>200278856672</ownerId>
                    <requesterManaged>false</requesterManaged>
                    <status>in-use</status>
                    <macAddress>02:a3:b9:61:d3:ee</macAddress>
                    <privateIpAddress>10.2.0.239</privateIpAddress>
                    <sourceDestCheck>true</sourceDestCheck>
                    <groupSet>
                        <item>
                            <groupId>sg-76c10f08</groupId>
                            <groupName>EmsRefreshSpecStack-InstanceSecurityGroup-QS2FPLKQ8HEF</groupName>
                        </item>
                    </groupSet>
                    <attachment>
                        <attachmentId>eni-attach-cbd22453</attachmentId>
                        <instanceId>i-0bca58e6e540ddc39</instanceId>
                        <instanceOwnerId>200278856672</instanceOwnerId>
                        <deviceIndex>0</deviceIndex>
                        <status>attached</status>
                        <attachTime>2017-05-03T10:47:06.000Z</attachTime>
                        <deleteOnTermination>true</deleteOnTermination>
                    </attachment>
                    <association>
                        <publicIp>34.202.178.10</publicIp>
                        <publicDnsName/>
                        <ipOwnerId>200278856672</ipOwnerId>
                        <allocationId>eipalloc-9a4472ab</allocationId>
                        <associationId>eipassoc-13766e23</associationId>
                    </association>
                    <tagSet/>
                    <privateIpAddressesSet>
                        <item>
                            <privateIpAddress>10.2.0.239</privateIpAddress>
                            <primary>true</primary>
                            <association>
                                <publicIp>34.202.178.10</publicIp>
                                <publicDnsName/>
                                <ipOwnerId>200278856672</ipOwnerId>
                                <allocationId>eipalloc-9a4472ab</allocationId>
                                <associationId>eipassoc-13766e23</associationId>
                            </association>
                        </item>
                    </privateIpAddressesSet>
                    <ipv6AddressesSet/>
                </item>
            </networkInterfaceSet>
        </DescribeNetworkInterfacesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:29 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeAvailabilityZones&Filter.1.Name=zone-name&Filter.1.Value.1=us-east-1c&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121329Z
      X-Amz-Content-Sha256:
      - 5dfa72ee56d05dff896933ac98ddeb0ad169e32cab5750853b5b2cea73a864e0
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=73ec2ac862bdde2c1e0a527ab0c816c0251ddd72a91b64a009f67adf42ef52e8
      Content-Length:
      - '103'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:30 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeAvailabilityZonesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>8436d280-6cf4-4fe6-b11f-2dfe26e4d068</requestId>
            <availabilityZoneInfo>
                <item>
                    <zoneName>us-east-1c</zoneName>
                    <zoneState>available</zoneState>
                    <regionName>us-east-1</regionName>
                    <messageSet/>
                </item>
            </availabilityZoneInfo>
        </DescribeAvailabilityZonesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:30 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeKeyPairs&Filter.1.Name=key-name&Filter.1.Value.1=EmsRefreshSpec-KeyPair&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121330Z
      X-Amz-Content-Sha256:
      - 8b897801bc6737ad27423b50d05f4c5a3cb37aff5adc92042c314bf391679416
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=a7c101b6b2959a0071d006662bdd15b3a876442c20cc231fe282c2d8500ce5d1
      Content-Length:
      - '105'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:30 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeKeyPairsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>120f252e-79a6-43ea-bb1e-be24b0009fda</requestId>
            <keySet>
                <item>
                    <keyName>EmsRefreshSpec-KeyPair</keyName>
                    <keyFingerprint>49:9f:3f:a4:26:48:39:94:26:06:dd:25:73:e5:da:9b:4b:1b:6c:93</keyFingerprint>
                </item>
            </keySet>
        </DescribeKeyPairsResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:30 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeStacks&StackName=arn%3Aaws%3Acloudformation%3Aus-east-1%3A200278856672%3Astack%2FEmsRefreshSpecStack%2Fb4e06950-2fed-11e7-bd93-500c286374d1&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121330Z
      X-Amz-Content-Sha256:
      - ee7457b505a85bcdc54c00cc7e1428239c8d49174f88965bdf64f2a7c3baa103
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=a56915141b2bbbf005ca06ec769c895528d2a36f7bf75950f79b60ad5ca3178a
      Content-Length:
      - '173'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - ec45d18e-2ff9-11e7-8080-cfa0c0b564b2
      Content-Type:
      - text/xml
      Content-Length:
      - '2483'
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:30 GMT
    body:
      encoding: UTF-8
      string: |
        <DescribeStacksResponse xmlns="http://cloudformation.amazonaws.com/doc/2010-05-15/">
          <DescribeStacksResult>
            <Stacks>
              <member>
                <Outputs>
                  <member>
                    <Description>IP Address of the host</Description>
                    <OutputKey>Bastion</OutputKey>
                    <OutputValue>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S/d3bb46b0-2fed-11e7-a3d9-503f23fb55fe</OutputValue>
                  </member>
                </Outputs>
                <Capabilities>
                  <member>CAPABILITY_NAMED_IAM</member>
                </Capabilities>
                <CreationTime>2017-05-03T10:46:04.698Z</CreationTime>
                <NotificationARNs/>
                <StackId>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</StackId>
                <StackName>EmsRefreshSpecStack</StackName>
                <Description>AWS CloudFormation Sample Template vpc_single_instance_in_subnet.template: Sample template showing how to create a VPC and add an EC2 instance with an Elastic IP address and a security group. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.</Description>
                <StackStatus>CREATE_COMPLETE</StackStatus>
                <DisableRollback>false</DisableRollback>
                <Tags>
                  <member>
                    <Value>EmsRefreshSpecStack-value2</Value>
                    <Key>EmsRefreshSpecStack-key2</Key>
                  </member>
                  <member>
                    <Value>EmsRefreshSpecStack-value1</Value>
                    <Key>EmsRefreshSpecStack-key1</Key>
                  </member>
                </Tags>
                <Parameters>
                  <member>
                    <ParameterKey>KeyName</ParameterKey>
                    <ParameterValue>EmsRefreshSpec-KeyPair</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>SSHLocation</ParameterKey>
                    <ParameterValue>0.0.0.0/0</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>DBRootPassword</ParameterKey>
                    <ParameterValue>****</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>InstanceType</ParameterKey>
                    <ParameterValue>t2.nano</ParameterValue>
                  </member>
                </Parameters>
              </member>
            </Stacks>
          </DescribeStacksResult>
          <ResponseMetadata>
            <RequestId>ec45d18e-2ff9-11e7-8080-cfa0c0b564b2</RequestId>
          </ResponseMetadata>
        </DescribeStacksResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:31 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeStacks&StackName=arn%3Aaws%3Acloudformation%3Aus-east-1%3A200278856672%3Astack%2FEmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S%2Fd3bb46b0-2fed-11e7-a3d9-503f23fb55fe&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121331Z
      X-Amz-Content-Sha256:
      - 757f116d419bd4d4b28f0f2066e5d8ebd0130dccf7e5ddc04269a9836899e0bd
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=1b1cfa078a074bd2acc5809a32fbb679ddfb201274e04465fcd99b1a607917d9
      Content-Length:
      - '205'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - ec963b22-2ff9-11e7-a6a4-e7d7f64d6d4f
      Content-Type:
      - text/xml
      Content-Length:
      - '2731'
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:31 GMT
    body:
      encoding: UTF-8
      string: |
        <DescribeStacksResponse xmlns="http://cloudformation.amazonaws.com/doc/2010-05-15/">
          <DescribeStacksResult>
            <Stacks>
              <member>
                <Outputs>
                  <member>
                    <Description>Newly created application URL</Description>
                    <OutputKey>URL</OutputKey>
                    <OutputValue>http://34.202.178.10</OutputValue>
                  </member>
                </Outputs>
                <Capabilities>
                  <member>CAPABILITY_NAMED_IAM</member>
                </Capabilities>
                <CreationTime>2017-05-03T10:46:56.780Z</CreationTime>
                <NotificationARNs/>
                <StackId>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S/d3bb46b0-2fed-11e7-a3d9-503f23fb55fe</StackId>
                <StackName>EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S</StackName>
                <Description>AWS CloudFormation Sample Template VPC_Single_Instance_In_Subnet: Sample template showing how to create a VPC and add an EC2 instance with an Elastic IP address and a security group. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.</Description>
                <StackStatus>CREATE_COMPLETE</StackStatus>
                <DisableRollback>true</DisableRollback>
                <Tags>
                  <member>
                    <Value>EmsRefreshSpecStack-value2</Value>
                    <Key>EmsRefreshSpecStack-key2</Key>
                  </member>
                  <member>
                    <Value>EmsRefreshSpecStack-value1</Value>
                    <Key>EmsRefreshSpecStack-key1</Key>
                  </member>
                </Tags>
                <Parameters>
                  <member>
                    <ParameterKey>KeyName</ParameterKey>
                    <ParameterValue>EmsRefreshSpec-KeyPair</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>SSHLocation</ParameterKey>
                    <ParameterValue>0.0.0.0/0</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>InstanceSecurityGroupID</ParameterKey>
                    <ParameterValue>sg-76c10f08</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>DBRootPassword</ParameterKey>
                    <ParameterValue>****</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>SubnetID</ParameterKey>
                    <ParameterValue>subnet-2190b144</ParameterValue>
                  </member>
                  <member>
                    <ParameterKey>InstanceType</ParameterKey>
                    <ParameterValue>t2.nano</ParameterValue>
                  </member>
                </Parameters>
              </member>
            </Stacks>
          </DescribeStacksResult>
          <ResponseMetadata>
            <RequestId>ec963b22-2ff9-11e7-a6a4-e7d7f64d6d4f</RequestId>
          </ResponseMetadata>
        </DescribeStacksResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:32 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=GetTemplate&StackName=EmsRefreshSpecStack&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121332Z
      X-Amz-Content-Sha256:
      - 4dc6d77a6dbb5ed8a7f7ff3b24280515d1c3b34596643cdface7d23473f3237f
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=462896663600a77ec6c1621464ef23154a54fd8b998bf0d45ff8cc7a9504d537
      Content-Length:
      - '67'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - ece3bf0a-2ff9-11e7-a9c1-99be43ad8433
      Content-Type:
      - text/xml
      Content-Length:
      - '11953'
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:32 GMT
    body:
      encoding: UTF-8
      string: "<GetTemplateResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\n
        \ <GetTemplateResult>\n    <TemplateBody>{\n  &quot;AWSTemplateFormatVersion&quot;
        : &quot;2010-09-09&quot;,\n\n  &quot;Description&quot; : &quot;AWS CloudFormation
        Sample Template vpc_single_instance_in_subnet.template: Sample template showing
        how to create a VPC and add an EC2 instance with an Elastic IP address and
        a security group. **WARNING** This template creates an Amazon EC2 instance.
        You will be billed for the AWS resources used if you create a stack from this
        template.&quot;,\n\n  &quot;Parameters&quot; : {\n\n    &quot;InstanceType&quot;
        : {\n      &quot;Description&quot; : &quot;WebServer EC2 instance type&quot;,\n
        \     &quot;Type&quot; : &quot;String&quot;,\n      &quot;Default&quot; :
        &quot;t2.nano&quot;,\n      &quot;AllowedValues&quot; : [ &quot;t2.nano&quot;,
        &quot;t1.micro&quot;,&quot;m1.small&quot;,&quot;m1.medium&quot;,&quot;m1.large&quot;,&quot;m1.xlarge&quot;,&quot;m2.xlarge&quot;,&quot;m2.2xlarge&quot;,&quot;m2.4xlarge&quot;,&quot;m3.xlarge&quot;,&quot;m3.2xlarge&quot;,&quot;c1.medium&quot;,&quot;c1.xlarge&quot;,&quot;cc1.4xlarge&quot;,&quot;cc2.8xlarge&quot;,&quot;cg1.4xlarge&quot;],\n
        \     &quot;ConstraintDescription&quot; : &quot;must be a valid EC2 instance
        type.&quot;\n    },\n\n    &quot;KeyName&quot;: {\n      &quot;Description&quot;:
        &quot;Name of an existing EC2 KeyPair to enable SSH access to the instances&quot;,\n
        \     &quot;Type&quot;: &quot;AWS::EC2::KeyPair::KeyName&quot;,\n      &quot;ConstraintDescription&quot;:
        &quot;must be the name of an existing EC2 KeyPair.&quot;\n    },\n\n    &quot;DBRootPassword&quot;:
        {\n      &quot;Description&quot;: &quot;Db password&quot;,\n      &quot;Type&quot;:
        &quot;String&quot;,\n      &quot;NoEcho&quot;: &quot;true&quot;, \n      &quot;Default&quot;:
        &quot;adminadmin&quot;\n    },\t\n\n    &quot;SSHLocation&quot; : {\n      &quot;Description&quot;
        : &quot; The IP address range that can be used to SSH to the EC2 instances&quot;,\n
        \     &quot;Type&quot;: &quot;String&quot;,\n      &quot;MinLength&quot;:
        &quot;9&quot;,\n      &quot;MaxLength&quot;: &quot;18&quot;,\n      &quot;Default&quot;:
        &quot;0.0.0.0/0&quot;,\n      &quot;AllowedPattern&quot;: &quot;(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})&quot;,\n
        \     &quot;ConstraintDescription&quot;: &quot;must be a valid IP CIDR range
        of the form x.x.x.x/x.&quot;\n    }\n  },\n\n  &quot;Mappings&quot; : {\n
        \   &quot;RegionMap&quot; : {\n      &quot;us-east-1&quot;      : { &quot;AMI&quot;
        : &quot;ami-7f418316&quot; },\n      &quot;us-west-1&quot;      : { &quot;AMI&quot;
        : &quot;ami-951945d0&quot; },\n      &quot;us-west-2&quot;      : { &quot;AMI&quot;
        : &quot;ami-16fd7026&quot; },\n      &quot;eu-west-1&quot;      : { &quot;AMI&quot;
        : &quot;ami-24506250&quot; },\n      &quot;sa-east-1&quot;      : { &quot;AMI&quot;
        : &quot;ami-3e3be423&quot; },\n      &quot;ap-southeast-1&quot; : { &quot;AMI&quot;
        : &quot;ami-74dda626&quot; },\n      &quot;ap-southeast-2&quot; : { &quot;AMI&quot;
        : &quot;ami-b3990e89&quot; },\n      &quot;ap-northeast-1&quot; : { &quot;AMI&quot;
        : &quot;ami-dcfa4edd&quot; }\n    }\n  },\n\n  &quot;Resources&quot; : {\n\n
        \   &quot;VPC&quot; : {\n      &quot;Type&quot; : &quot;AWS::EC2::VPC&quot;,\n
        \     &quot;Properties&quot; : {\n        &quot;CidrBlock&quot; : &quot;10.2.0.0/16&quot;,\n
        \       &quot;Tags&quot; : [ {&quot;Key&quot; : &quot;Application&quot;, &quot;Value&quot;
        : { &quot;Ref&quot; : &quot;AWS::StackId&quot;} } ]\n      }\n    },\n\n    &quot;Subnet&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::Subnet&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;VpcId&quot; : { &quot;Ref&quot; : &quot;VPC&quot; },\n
        \       &quot;CidrBlock&quot; : &quot;10.2.0.0/24&quot;,\n        &quot;Tags&quot;
        : [ {&quot;Key&quot; : &quot;Application&quot;, &quot;Value&quot; : { &quot;Ref&quot;
        : &quot;AWS::StackId&quot;} } ]\n      }\n    },\n\n    &quot;InternetGateway&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::InternetGateway&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;Tags&quot; : [ {&quot;Key&quot; : &quot;Application&quot;,
        &quot;Value&quot; : { &quot;Ref&quot; : &quot;AWS::StackId&quot;} } ]\n      }\n
        \   },\n\n    &quot;AttachGateway&quot; : {\n       &quot;Type&quot; : &quot;AWS::EC2::VPCGatewayAttachment&quot;,\n
        \      &quot;Properties&quot; : {\n         &quot;VpcId&quot; : { &quot;Ref&quot;
        : &quot;VPC&quot; },\n         &quot;InternetGatewayId&quot; : { &quot;Ref&quot;
        : &quot;InternetGateway&quot; }\n       }\n    },\n\n    &quot;RouteTable&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::RouteTable&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;VpcId&quot; : {&quot;Ref&quot; : &quot;VPC&quot;},\n        &quot;Tags&quot;
        : [ {&quot;Key&quot; : &quot;Application&quot;, &quot;Value&quot; : { &quot;Ref&quot;
        : &quot;AWS::StackId&quot;} } ]\n      }\n    },\n\n    &quot;Route&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::Route&quot;,\n      &quot;DependsOn&quot;
        : &quot;AttachGateway&quot;,\n      &quot;Properties&quot; : {\n        &quot;RouteTableId&quot;
        : { &quot;Ref&quot; : &quot;RouteTable&quot; },\n        &quot;DestinationCidrBlock&quot;
        : &quot;0.0.0.0/0&quot;,\n        &quot;GatewayId&quot; : { &quot;Ref&quot;
        : &quot;InternetGateway&quot; }\n      }\n    },\n\n    &quot;SubnetRouteTableAssociation&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::SubnetRouteTableAssociation&quot;,\n
        \     &quot;Properties&quot; : {\n        &quot;SubnetId&quot; : { &quot;Ref&quot;
        : &quot;Subnet&quot; },\n        &quot;RouteTableId&quot; : { &quot;Ref&quot;
        : &quot;RouteTable&quot; }\n      }\n    },\n\n    &quot;NetworkAcl&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAcl&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;VpcId&quot; : {&quot;Ref&quot; : &quot;VPC&quot;},\n        &quot;Tags&quot;
        : [ {&quot;Key&quot; : &quot;Application&quot;, &quot;Value&quot; : { &quot;Ref&quot;
        : &quot;AWS::StackId&quot;} } ]\n      }\n    },\n\n    &quot;InboundHTTPNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;100&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;false&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;80&quot;, &quot;To&quot;
        : &quot;80&quot;}\n      }\n    },\n\n    &quot;InboundSSHNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;101&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;false&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;22&quot;, &quot;To&quot;
        : &quot;22&quot;}\n      }\n    },\n\n    &quot;InboundResponsePortsNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;102&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;false&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;1024&quot;, &quot;To&quot;
        : &quot;65535&quot;}\n      }\n    },\n\n    &quot;OutBoundHTTPNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;100&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;true&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;80&quot;, &quot;To&quot;
        : &quot;80&quot;}\n      }\n    },\n\n    &quot;OutBoundHTTPSNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;101&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;true&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;443&quot;, &quot;To&quot;
        : &quot;443&quot;}\n      }\n    },\n\n    &quot;OutBoundResponsePortsNetworkAclEntry&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::NetworkAclEntry&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;NetworkAclId&quot; : {&quot;Ref&quot; : &quot;NetworkAcl&quot;},\n
        \       &quot;RuleNumber&quot; : &quot;102&quot;,\n        &quot;Protocol&quot;
        : &quot;6&quot;,\n        &quot;RuleAction&quot; : &quot;allow&quot;,\n        &quot;Egress&quot;
        : &quot;true&quot;,\n        &quot;CidrBlock&quot; : &quot;0.0.0.0/0&quot;,\n
        \       &quot;PortRange&quot; : {&quot;From&quot; : &quot;1024&quot;, &quot;To&quot;
        : &quot;65535&quot;}\n      }\n    },\n\n    &quot;SubnetNetworkAclAssociation&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::SubnetNetworkAclAssociation&quot;,\n
        \     &quot;Properties&quot; : {\n        &quot;SubnetId&quot; : { &quot;Ref&quot;
        : &quot;Subnet&quot; },\n        &quot;NetworkAclId&quot; : { &quot;Ref&quot;
        : &quot;NetworkAcl&quot; }\n      }\n    },\n\n    &quot;InstanceSecurityGroup&quot;
        : {\n      &quot;Type&quot; : &quot;AWS::EC2::SecurityGroup&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;VpcId&quot; : { &quot;Ref&quot; : &quot;VPC&quot; },\n
        \       &quot;GroupDescription&quot; : &quot;Enable SSH access via port 22&quot;,\n
        \       &quot;SecurityGroupIngress&quot; : [\n          {&quot;IpProtocol&quot;
        : &quot;tcp&quot;, &quot;FromPort&quot; : &quot;22&quot;, &quot;ToPort&quot;
        : &quot;22&quot;, &quot;CidrIp&quot; : { &quot;Ref&quot; : &quot;SSHLocation&quot;}},\n
        \         { &quot;IpProtocol&quot; : &quot;tcp&quot;, &quot;FromPort&quot;
        : &quot;80&quot;, &quot;ToPort&quot; : &quot;80&quot;, &quot;CidrIp&quot;
        : &quot;0.0.0.0/0&quot;}\n         ]\n      }\n    },\n\n\n    &quot;WebServerInstance&quot;
        : {\n         &quot;Type&quot; : &quot;AWS::CloudFormation::Stack&quot;,\n
        \        &quot;DependsOn&quot; : &quot;AttachGateway&quot;,\n         &quot;Properties&quot;
        : {\n             &quot;TemplateURL&quot; : &quot;https://s3.amazonaws.com/cf-templates-13wbkx0x8rgs2-us-east-1/EmsRefreshSpecStackTemplates/cf-vpc-template-for-vm&quot;,\n
        \            &quot;Parameters&quot; : {\n                 &quot;DBRootPassword&quot;
        : { &quot;Ref&quot; : &quot;DBRootPassword&quot; },\n                 &quot;InstanceType&quot;
        : { &quot;Ref&quot; : &quot;InstanceType&quot; },\n                 &quot;KeyName&quot;
        : { &quot;Ref&quot; : &quot;KeyName&quot; },\n                 &quot;InstanceSecurityGroupID&quot;:
        { &quot;Ref&quot; : &quot;InstanceSecurityGroup&quot; },\n                 &quot;SubnetID&quot;
        : { &quot;Ref&quot; : &quot;Subnet&quot; }\n             }\n           }\n
        \   }\n  },\n\n  &quot;Outputs&quot; : {\n    &quot;Bastion&quot; : {\n      &quot;Description&quot;
        : &quot;IP Address of the host&quot;,\n      &quot;Value&quot; :  { &quot;Ref&quot;
        : &quot;WebServerInstance&quot; }\n    }\n  }\n}\n</TemplateBody>\n    <StagesAvailable>\n
        \     <member>Original</member>\n      <member>Processed</member>\n    </StagesAvailable>\n
        \ </GetTemplateResult>\n  <ResponseMetadata>\n    <RequestId>ece3bf0a-2ff9-11e7-a9c1-99be43ad8433</RequestId>\n
        \ </ResponseMetadata>\n</GetTemplateResponse>\n"
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:32 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=ListStackResources&StackName=EmsRefreshSpecStack&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121332Z
      X-Amz-Content-Sha256:
      - 5129d3e8ebb78afbee802141b221fa01c75c48ea0420549a3a199f5af6b9849c
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=360deadb3bb8877a35176156d41a579312e946e56023d90fd9b9e3f8d2cbd6ed
      Content-Length:
      - '74'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - ed3931db-2ff9-11e7-955f-4d618389ddeb
      Content-Type:
      - text/xml
      Content-Length:
      - '6667'
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:33 GMT
    body:
      encoding: UTF-8
      string: |
        <ListStackResourcesResponse xmlns="http://cloudformation.amazonaws.com/doc/2010-05-15/">
          <ListStackResourcesResult>
            <StackResourceSummaries>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:51.634Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-Attac-18IYH2NXW163I</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>AttachGateway</LogicalResourceId>
                <ResourceType>AWS::EC2::VPCGatewayAttachment</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:59.572Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-Inbou-1M80E3XJX5ZG6</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>InboundHTTPNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:56.467Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-Inbou-E8UR0I5STC4V</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>InboundResponsePortsNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:55.099Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-Inbou-1E29UZ91J3L0R</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>InboundSSHNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:51.481Z</LastUpdatedTimestamp>
                <PhysicalResourceId>sg-76c10f08</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>InstanceSecurityGroup</LogicalResourceId>
                <ResourceType>AWS::EC2::SecurityGroup</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:29.550Z</LastUpdatedTimestamp>
                <PhysicalResourceId>igw-64924d02</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>InternetGateway</LogicalResourceId>
                <ResourceType>AWS::EC2::InternetGateway</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:34.869Z</LastUpdatedTimestamp>
                <PhysicalResourceId>acl-e616ad9f</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>NetworkAcl</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAcl</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:56.226Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-OutBo-1NZIAZJB04JPV</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>OutBoundHTTPNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:56.162Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-OutBo-11CPJOERKOC1S</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>OutBoundHTTPSNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:57.712Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-OutBo-1VCOFXN25WKE2</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>OutBoundResponsePortsNetworkAclEntry</LogicalResourceId>
                <ResourceType>AWS::EC2::NetworkAclEntry</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:47:11.450Z</LastUpdatedTimestamp>
                <PhysicalResourceId>EmsRe-Route-CE90KA6C89YL</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>Route</LogicalResourceId>
                <ResourceType>AWS::EC2::Route</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:35.945Z</LastUpdatedTimestamp>
                <PhysicalResourceId>rtb-d37690ab</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>RouteTable</LogicalResourceId>
                <ResourceType>AWS::EC2::RouteTable</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:51.908Z</LastUpdatedTimestamp>
                <PhysicalResourceId>subnet-2190b144</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>Subnet</LogicalResourceId>
                <ResourceType>AWS::EC2::Subnet</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:47:12.194Z</LastUpdatedTimestamp>
                <PhysicalResourceId>aclassoc-5960cf29</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>SubnetNetworkAclAssociation</LogicalResourceId>
                <ResourceType>AWS::EC2::SubnetNetworkAclAssociation</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:47:11.882Z</LastUpdatedTimestamp>
                <PhysicalResourceId>rtbassoc-d35ff3a8</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>SubnetRouteTableAssociation</LogicalResourceId>
                <ResourceType>AWS::EC2::SubnetRouteTableAssociation</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:46:30.347Z</LastUpdatedTimestamp>
                <PhysicalResourceId>vpc-8cf117f5</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>VPC</LogicalResourceId>
                <ResourceType>AWS::EC2::VPC</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:49:38.256Z</LastUpdatedTimestamp>
                <PhysicalResourceId>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S/d3bb46b0-2fed-11e7-a3d9-503f23fb55fe</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>WebServerInstance</LogicalResourceId>
                <ResourceType>AWS::CloudFormation::Stack</ResourceType>
              </member>
            </StackResourceSummaries>
          </ListStackResourcesResult>
          <ResponseMetadata>
            <RequestId>ed3931db-2ff9-11e7-955f-4d618389ddeb</RequestId>
          </ResponseMetadata>
        </ListStackResourcesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:33 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=GetTemplate&StackName=EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121333Z
      X-Amz-Content-Sha256:
      - f005060b494874c71d174f59905bab23a022e5b3da296b5735783b2d2b59db30
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=d4c1cccf6e1ae020795084eb4bc5acbd74d8a0b7884493ca322aa10a5c213d5d
      Content-Length:
      - '99'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - ed8b9721-2ff9-11e7-840d-21a8fdf55692
      Content-Type:
      - text/xml
      Content-Length:
      - '23157'
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:33 GMT
    body:
      encoding: UTF-8
      string: "<GetTemplateResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\n
        \ <GetTemplateResult>\n    <TemplateBody>{\n  &quot;AWSTemplateFormatVersion&quot;
        : &quot;2010-09-09&quot;,\n\n  &quot;Description&quot; : &quot;AWS CloudFormation
        Sample Template VPC_Single_Instance_In_Subnet: Sample template showing how
        to create a VPC and add an EC2 instance with an Elastic IP address and a security
        group. **WARNING** This template creates an Amazon EC2 instance. You will
        be billed for the AWS resources used if you create a stack from this template.&quot;,\n\n
        \ &quot;Parameters&quot; : {\n\n    &quot;InstanceType&quot; : {\n      &quot;Description&quot;
        : &quot;WebServer EC2 instance type&quot;,\n      &quot;Type&quot; : &quot;String&quot;,\n
        \     &quot;Default&quot; : &quot;t2.small&quot;,\n      &quot;AllowedValues&quot;
        : [ &quot;t1.micro&quot;, &quot;t2.nano&quot;, &quot;t2.micro&quot;, &quot;t2.small&quot;,
        &quot;t2.medium&quot;, &quot;t2.large&quot;, &quot;m1.small&quot;, &quot;m1.medium&quot;,
        &quot;m1.large&quot;, &quot;m1.xlarge&quot;, &quot;m2.xlarge&quot;, &quot;m2.2xlarge&quot;,
        &quot;m2.4xlarge&quot;, &quot;m3.medium&quot;, &quot;m3.large&quot;, &quot;m3.xlarge&quot;,
        &quot;m3.2xlarge&quot;, &quot;m4.large&quot;, &quot;m4.xlarge&quot;, &quot;m4.2xlarge&quot;,
        &quot;m4.4xlarge&quot;, &quot;m4.10xlarge&quot;, &quot;c1.medium&quot;, &quot;c1.xlarge&quot;,
        &quot;c3.large&quot;, &quot;c3.xlarge&quot;, &quot;c3.2xlarge&quot;, &quot;c3.4xlarge&quot;,
        &quot;c3.8xlarge&quot;, &quot;c4.large&quot;, &quot;c4.xlarge&quot;, &quot;c4.2xlarge&quot;,
        &quot;c4.4xlarge&quot;, &quot;c4.8xlarge&quot;, &quot;g2.2xlarge&quot;, &quot;g2.8xlarge&quot;,
        &quot;r3.large&quot;, &quot;r3.xlarge&quot;, &quot;r3.2xlarge&quot;, &quot;r3.4xlarge&quot;,
        &quot;r3.8xlarge&quot;, &quot;i2.xlarge&quot;, &quot;i2.2xlarge&quot;, &quot;i2.4xlarge&quot;,
        &quot;i2.8xlarge&quot;, &quot;d2.xlarge&quot;, &quot;d2.2xlarge&quot;, &quot;d2.4xlarge&quot;,
        &quot;d2.8xlarge&quot;, &quot;hi1.4xlarge&quot;, &quot;hs1.8xlarge&quot;,
        &quot;cr1.8xlarge&quot;, &quot;cc2.8xlarge&quot;, &quot;cg1.4xlarge&quot;]\n,\n
        \     &quot;ConstraintDescription&quot; : &quot;must be a valid EC2 instance
        type.&quot;\n    },\n\n    &quot;KeyName&quot;: {\n      &quot;Description&quot;
        : &quot;Name of an existing EC2 KeyPair to enable SSH access to the instance&quot;,\n
        \     &quot;Type&quot;: &quot;AWS::EC2::KeyPair::KeyName&quot;,\n      &quot;ConstraintDescription&quot;
        : &quot;must be the name of an existing EC2 KeyPair.&quot;\n    },\n\n    &quot;DBRootPassword&quot;:
        {\n      &quot;Description&quot;: &quot;Db password&quot;,\n      &quot;Type&quot;:
        &quot;String&quot;,\n      &quot;NoEcho&quot;: &quot;true&quot;, \n      &quot;Default&quot;:
        &quot;adminadmin&quot;\n    },\t\n    \n    &quot;SSHLocation&quot; : {\n
        \     &quot;Description&quot; : &quot; The IP address range that can be used
        to SSH to the EC2 instances&quot;,\n      &quot;Type&quot;: &quot;String&quot;,\n
        \     &quot;MinLength&quot;: &quot;9&quot;,\n      &quot;MaxLength&quot;:
        &quot;18&quot;,\n      &quot;Default&quot;: &quot;0.0.0.0/0&quot;,\n      &quot;AllowedPattern&quot;:
        &quot;(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})&quot;,\n
        \     &quot;ConstraintDescription&quot;: &quot;must be a valid IP CIDR range
        of the form x.x.x.x/x.&quot;\n    },\n\n    &quot;InstanceSecurityGroupID&quot;:
        {\n      &quot;Description&quot;: &quot;Security Group ID&quot;,\n      &quot;Type&quot;:
        &quot;AWS::EC2::SecurityGroup::Id&quot;,\n      &quot;ConstraintDescription&quot;:
        &quot;must be the id of an existing VPC SecurityGroup.&quot;\n    },\n    \n
        \   &quot;SubnetID&quot;: {\n      &quot;Description&quot;: &quot;Subnet ID&quot;,\n
        \     &quot;Type&quot;: &quot;AWS::EC2::Subnet::Id&quot;,\n      &quot;ConstraintDescription&quot;:
        &quot;must be the id of an existing VPC Subnet.&quot;\n    }\n  },\n\n  &quot;Mappings&quot;
        : {\n    &quot;Region2Examples&quot; : {\n      &quot;us-east-1&quot;      :
        { &quot;Examples&quot; : &quot;https://s3.amazonaws.com/cloudformation-examples-us-east-1&quot;
        },\n      &quot;us-west-2&quot;      : { &quot;Examples&quot; : &quot;https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2&quot;
        },\n      &quot;us-west-1&quot;      : { &quot;Examples&quot; : &quot;https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1&quot;
        },\n      &quot;eu-west-1&quot;      : { &quot;Examples&quot; : &quot;https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1&quot;
        },\n      &quot;eu-west-2&quot;      : { &quot;Examples&quot; : &quot;https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2&quot;
        },\n      &quot;eu-central-1&quot;   : { &quot;Examples&quot; : &quot;https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1&quot;
        },\n      &quot;ap-southeast-1&quot; : { &quot;Examples&quot; : &quot;https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1&quot;
        },\n      &quot;ap-northeast-1&quot; : { &quot;Examples&quot; : &quot;https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1&quot;
        },\n      &quot;ap-northeast-2&quot; : { &quot;Examples&quot; : &quot;https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2&quot;
        },\n      &quot;ap-southeast-2&quot; : { &quot;Examples&quot; : &quot;https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2&quot;
        },\n      &quot;ap-south-1&quot;     : { &quot;Examples&quot; : &quot;https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1&quot;
        },\n      &quot;us-east-2&quot;      : { &quot;Examples&quot; : &quot;https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2&quot;
        },\n      &quot;ca-central-1&quot;   : { &quot;Examples&quot; : &quot;https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1&quot;
        },\n      &quot;sa-east-1&quot;      : { &quot;Examples&quot; : &quot;https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1&quot;
        },\n      &quot;cn-north-1&quot;     : { &quot;Examples&quot; : &quot;https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1&quot;
        }\n    }\n,\n    &quot;AWSInstanceType2Arch&quot; : {\n      &quot;t1.micro&quot;
        \   : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;t2.nano&quot;
        \    : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;t2.micro&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;t2.small&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;t2.medium&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;t2.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m1.small&quot;
        \   : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m1.medium&quot;
        \  : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m1.large&quot;
        \   : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m1.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m2.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m2.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m2.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;m3.medium&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m3.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m3.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m3.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m4.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m4.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m4.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m4.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;m4.10xlarge&quot;
        : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c1.medium&quot;
        \  : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;c1.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;PV64&quot;   },\n      &quot;c3.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c3.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c3.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c3.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c3.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c4.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c4.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c4.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c4.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;c4.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;g2.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVMG2&quot;  },\n      &quot;g2.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVMG2&quot;  },\n      &quot;r3.large&quot;
        \   : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;r3.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;r3.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;r3.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;r3.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;i2.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;i2.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;i2.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;i2.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;d2.xlarge&quot;
        \  : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;d2.2xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;d2.4xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;d2.8xlarge&quot;
        \ : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;hi1.4xlarge&quot;
        : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;hs1.8xlarge&quot;
        : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;cr1.8xlarge&quot;
        : { &quot;Arch&quot; : &quot;HVM64&quot;  },\n      &quot;cc2.8xlarge&quot;
        : { &quot;Arch&quot; : &quot;HVM64&quot;  }\n    },\n\n    &quot;AWSInstanceType2NATArch&quot;
        : {\n      &quot;t1.micro&quot;    : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;t2.nano&quot;     : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;t2.micro&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;t2.small&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;t2.medium&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;t2.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m1.small&quot;    : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m1.medium&quot;   : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m1.large&quot;    : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m1.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m2.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m2.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m2.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;m3.medium&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m3.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m3.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m3.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m4.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m4.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m4.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m4.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;m4.10xlarge&quot; : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c1.medium&quot;   : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;c1.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATPV64&quot;
        \  },\n      &quot;c3.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c3.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c3.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c3.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c3.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c4.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c4.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c4.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c4.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;c4.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;g2.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVMG2&quot;
        \ },\n      &quot;g2.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVMG2&quot;
        \ },\n      &quot;r3.large&quot;    : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;r3.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;r3.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;r3.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;r3.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;i2.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;i2.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;i2.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;i2.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;d2.xlarge&quot;   : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;d2.2xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;d2.4xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;d2.8xlarge&quot;  : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;hi1.4xlarge&quot; : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;hs1.8xlarge&quot; : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;cr1.8xlarge&quot; : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ },\n      &quot;cc2.8xlarge&quot; : { &quot;Arch&quot; : &quot;NATHVM64&quot;
        \ }\n    }\n,\n    &quot;AWSRegionArch2AMI&quot; : {\n      &quot;us-east-1&quot;
        \       : {&quot;PV64&quot; : &quot;ami-2a69aa47&quot;, &quot;HVM64&quot;
        : &quot;ami-6869aa05&quot;, &quot;HVMG2&quot; : &quot;ami-bb18efad&quot;},\n
        \     &quot;us-west-2&quot;        : {&quot;PV64&quot; : &quot;ami-7f77b31f&quot;,
        &quot;HVM64&quot; : &quot;ami-7172b611&quot;, &quot;HVMG2&quot; : &quot;ami-31912f51&quot;},\n
        \     &quot;us-west-1&quot;        : {&quot;PV64&quot; : &quot;ami-a2490dc2&quot;,
        &quot;HVM64&quot; : &quot;ami-31490d51&quot;, &quot;HVMG2&quot; : &quot;ami-0a9dcf6a&quot;},\n
        \     &quot;eu-west-1&quot;        : {&quot;PV64&quot; : &quot;ami-4cdd453f&quot;,
        &quot;HVM64&quot; : &quot;ami-f9dd458a&quot;, &quot;HVMG2&quot; : &quot;ami-873e61e1&quot;},\n
        \     &quot;eu-west-2&quot;        : {&quot;PV64&quot; : &quot;NOT_SUPPORTED&quot;,
        &quot;HVM64&quot; : &quot;ami-886369ec&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;},\n
        \     &quot;eu-central-1&quot;     : {&quot;PV64&quot; : &quot;ami-6527cf0a&quot;,
        &quot;HVM64&quot; : &quot;ami-ea26ce85&quot;, &quot;HVMG2&quot; : &quot;ami-a16ba4ce&quot;},\n
        \     &quot;ap-northeast-1&quot;   : {&quot;PV64&quot; : &quot;ami-3e42b65f&quot;,
        &quot;HVM64&quot; : &quot;ami-374db956&quot;, &quot;HVMG2&quot; : &quot;ami-6b443f0c&quot;},\n
        \     &quot;ap-northeast-2&quot;   : {&quot;PV64&quot; : &quot;NOT_SUPPORTED&quot;,
        &quot;HVM64&quot; : &quot;ami-2b408b45&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;},\n
        \     &quot;ap-southeast-1&quot;   : {&quot;PV64&quot; : &quot;ami-df9e4cbc&quot;,
        &quot;HVM64&quot; : &quot;ami-a59b49c6&quot;, &quot;HVMG2&quot; : &quot;ami-1c0ba17f&quot;},\n
        \     &quot;ap-southeast-2&quot;   : {&quot;PV64&quot; : &quot;ami-63351d00&quot;,
        &quot;HVM64&quot; : &quot;ami-dc361ebf&quot;, &quot;HVMG2&quot; : &quot;ami-bf0d0adc&quot;},\n
        \     &quot;ap-south-1&quot;       : {&quot;PV64&quot; : &quot;NOT_SUPPORTED&quot;,
        &quot;HVM64&quot; : &quot;ami-ffbdd790&quot;, &quot;HVMG2&quot; : &quot;ami-6135440e&quot;},\n
        \     &quot;us-east-2&quot;        : {&quot;PV64&quot; : &quot;NOT_SUPPORTED&quot;,
        &quot;HVM64&quot; : &quot;ami-f6035893&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;},\n
        \     &quot;ca-central-1&quot;     : {&quot;PV64&quot; : &quot;NOT_SUPPORTED&quot;,
        &quot;HVM64&quot; : &quot;ami-730ebd17&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;},\n
        \     &quot;sa-east-1&quot;        : {&quot;PV64&quot; : &quot;ami-1ad34676&quot;,
        &quot;HVM64&quot; : &quot;ami-6dd04501&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;},\n
        \     &quot;cn-north-1&quot;       : {&quot;PV64&quot; : &quot;ami-77559f1a&quot;,
        &quot;HVM64&quot; : &quot;ami-8e6aa0e3&quot;, &quot;HVMG2&quot; : &quot;NOT_SUPPORTED&quot;}\n
        \   }\n\n  },\n\n  &quot;Resources&quot; : {\n    &quot;IPAddress&quot; :
        {\n      &quot;Type&quot; : &quot;AWS::EC2::EIP&quot;,\n      &quot;Properties&quot;
        : {\n        &quot;Domain&quot; : &quot;vpc&quot;,\n        &quot;InstanceId&quot;
        : { &quot;Ref&quot; : &quot;WebServerInstance&quot; }\n      }\n    },\n\n
        \   &quot;WebServerInstance&quot; : {\n      &quot;Type&quot; : &quot;AWS::EC2::Instance&quot;,\n
        \     &quot;Metadata&quot; : {\n        &quot;Comment&quot; : &quot;Install
        a simple application&quot;,\n        &quot;AWS::CloudFormation::Init&quot;
        : {\n          &quot;config&quot; : {\n            &quot;packages&quot; :
        {\n              &quot;yum&quot; : {\n                &quot;httpd&quot;             :
        []\n              }\n            },\n\n            &quot;files&quot; : {\n
        \             &quot;/var/www/html/index.html&quot; : {\n                &quot;content&quot;
        : { &quot;Fn::Join&quot; : [&quot;\\n&quot;, [\n                  &quot;&lt;img
        src=\\&quot;&quot;, {&quot;Fn::FindInMap&quot; : [&quot;Region2Examples&quot;,
        {&quot;Ref&quot; : &quot;AWS::Region&quot;}, &quot;Examples&quot;]}, &quot;/cloudformation_graphic.png\\&quot;
        alt=\\&quot;AWS CloudFormation Logo\\&quot;/&gt;&quot;,\n                  &quot;&lt;h1&gt;Congratulations,
        you have successfully launched the AWS CloudFormation sample.&lt;/h1&gt;&quot;\n
        \               ]]},\n                &quot;mode&quot;    : &quot;000644&quot;,\n
        \               &quot;owner&quot;   : &quot;root&quot;,\n                &quot;group&quot;
        \  : &quot;root&quot;\n              },\n\n              &quot;/etc/cfn/cfn-hup.conf&quot;
        : {\n                &quot;content&quot; : { &quot;Fn::Join&quot; : [&quot;&quot;,
        [\n                  &quot;[main]\\n&quot;,\n                  &quot;stack=&quot;,
        { &quot;Ref&quot; : &quot;AWS::StackId&quot; }, &quot;\\n&quot;,\n                  &quot;region=&quot;,
        { &quot;Ref&quot; : &quot;AWS::Region&quot; }, &quot;\\n&quot;\n                ]]},\n
        \               &quot;mode&quot;    : &quot;000400&quot;,\n                &quot;owner&quot;
        \  : &quot;root&quot;,\n                &quot;group&quot;   : &quot;root&quot;\n
        \             },\n\n              &quot;/etc/cfn/hooks.d/cfn-auto-reloader.conf&quot;
        : {\n                &quot;content&quot;: { &quot;Fn::Join&quot; : [&quot;&quot;,
        [\n                  &quot;[cfn-auto-reloader-hook]\\n&quot;,\n                  &quot;triggers=post.update\\n&quot;,\n
        \                 &quot;path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\\n&quot;,\n
        \                 &quot;action=/opt/aws/bin/cfn-init -v &quot;,\n                  &quot;
        \        --stack &quot;, { &quot;Ref&quot; : &quot;AWS::StackName&quot; },\n
        \                 &quot;         --resource WebServerInstance &quot;,\n                  &quot;
        \        --region &quot;, { &quot;Ref&quot; : &quot;AWS::Region&quot; }, &quot;\\n&quot;,\n
        \                 &quot;runas=root\\n&quot;\n                ]]}\n              }\n
        \           },\n\n            &quot;services&quot; : {\n              &quot;sysvinit&quot;
        : {\n                &quot;httpd&quot;    : { &quot;enabled&quot; : &quot;true&quot;,
        &quot;ensureRunning&quot; : &quot;true&quot; },\n                &quot;cfn-hup&quot;
        : { &quot;enabled&quot; : &quot;true&quot;, &quot;ensureRunning&quot; : &quot;true&quot;,
        \n                              &quot;files&quot; : [&quot;/etc/cfn/cfn-hup.conf&quot;,
        &quot;/etc/cfn/hooks.d/cfn-auto-reloader.conf&quot;]}\n              }\n            }\n
        \         }\n        }\n      },\n      &quot;Properties&quot; : {\n        &quot;ImageId&quot;
        : { &quot;Fn::FindInMap&quot; : [ &quot;AWSRegionArch2AMI&quot;, { &quot;Ref&quot;
        : &quot;AWS::Region&quot; },\n                          { &quot;Fn::FindInMap&quot;
        : [ &quot;AWSInstanceType2Arch&quot;, { &quot;Ref&quot; : &quot;InstanceType&quot;
        }, &quot;Arch&quot; ] } ] },\n        &quot;InstanceType&quot; : { &quot;Ref&quot;
        : &quot;InstanceType&quot; },\n        &quot;KeyName&quot; : { &quot;Ref&quot;
        : &quot;KeyName&quot; },\n        &quot;Tags&quot; : [ {&quot;Key&quot; :
        &quot;Application&quot;, &quot;Value&quot; : { &quot;Ref&quot; : &quot;AWS::StackId&quot;}
        } ],\n        &quot;NetworkInterfaces&quot; : [{\n          &quot;GroupSet&quot;
        \                : [{ &quot;Ref&quot; : &quot;InstanceSecurityGroupID&quot;
        }],\n          &quot;AssociatePublicIpAddress&quot; : &quot;true&quot;,\n
        \         &quot;DeviceIndex&quot;              : &quot;0&quot;,\n          &quot;DeleteOnTermination&quot;
        \     : &quot;true&quot;,\n          &quot;SubnetId&quot;                 :
        { &quot;Ref&quot; : &quot;SubnetID&quot; }\n        }],\n        &quot;UserData&quot;
        \      : { &quot;Fn::Base64&quot; : { &quot;Fn::Join&quot; : [&quot;&quot;,
        [\n             &quot;#!/bin/bash -xe\\n&quot;,\n             &quot;yum update
        -y aws-cfn-bootstrap\\n&quot;,\n\n             &quot;/opt/aws/bin/cfn-init
        -v &quot;,\n             &quot;         --stack &quot;, { &quot;Ref&quot;
        : &quot;AWS::StackName&quot; },\n             &quot;         --resource WebServerInstance
        &quot;,\n             &quot;         --region &quot;, { &quot;Ref&quot; :
        &quot;AWS::Region&quot; }, &quot;\\n&quot;,\n\n             &quot;/opt/aws/bin/cfn-signal
        -e $? &quot;,\n             &quot;         --stack &quot;, { &quot;Ref&quot;
        : &quot;AWS::StackName&quot; },\n             &quot;         --resource WebServerInstance
        &quot;,\n             &quot;         --region &quot;, { &quot;Ref&quot; :
        &quot;AWS::Region&quot; }, &quot;\\n&quot;\n        ]]}}\n      },\n      &quot;CreationPolicy&quot;
        : {\n        &quot;ResourceSignal&quot; : {\n          &quot;Timeout&quot;
        : &quot;PT15M&quot;\n        }\n      }\n    }\n  },\n\n  &quot;Outputs&quot;
        : {\n    &quot;URL&quot; : {\n      &quot;Value&quot; : { &quot;Fn::Join&quot;
        : [ &quot;&quot;, [&quot;http://&quot;, { &quot;Fn::GetAtt&quot; : [&quot;WebServerInstance&quot;,
        &quot;PublicIp&quot;] }]]},\n      &quot;Description&quot; : &quot;Newly created
        application URL&quot;\n    }\n  }\n}\n\n</TemplateBody>\n    <StagesAvailable>\n
        \     <member>Original</member>\n      <member>Processed</member>\n    </StagesAvailable>\n
        \ </GetTemplateResult>\n  <ResponseMetadata>\n    <RequestId>ed8b9721-2ff9-11e7-840d-21a8fdf55692</RequestId>\n
        \ </ResponseMetadata>\n</GetTemplateResponse>\n"
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:33 GMT
- request:
    method: post
    uri: https://cloudformation.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=ListStackResources&StackName=EmsRefreshSpecStack-WebServerInstance-1CTHQS2P5WJ7S&Version=2010-05-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121333Z
      X-Amz-Content-Sha256:
      - e1551a75591c27367c42f68080eafefed1acf68b0640eb3eb946c2c3d1007a07
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/cloudformation/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=ac7d75543d1870f60d843573be419bb1c605808d8bd90e88c73eac36d0a60569
      Content-Length:
      - '106'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amzn-Requestid:
      - edf04cc2-2ff9-11e7-a7ba-bdb34b9efcc2
      Content-Type:
      - text/xml
      Content-Length:
      - '1037'
      Date:
      - Wed, 03 May 2017 12:13:34 GMT
    body:
      encoding: UTF-8
      string: |
        <ListStackResourcesResponse xmlns="http://cloudformation.amazonaws.com/doc/2010-05-15/">
          <ListStackResourcesResult>
            <StackResourceSummaries>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:49:32.560Z</LastUpdatedTimestamp>
                <PhysicalResourceId>34.202.178.10</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>IPAddress</LogicalResourceId>
                <ResourceType>AWS::EC2::EIP</ResourceType>
              </member>
              <member>
                <LastUpdatedTimestamp>2017-05-03T10:48:56.988Z</LastUpdatedTimestamp>
                <PhysicalResourceId>i-0bca58e6e540ddc39</PhysicalResourceId>
                <ResourceStatus>CREATE_COMPLETE</ResourceStatus>
                <LogicalResourceId>WebServerInstance</LogicalResourceId>
                <ResourceType>AWS::EC2::Instance</ResourceType>
              </member>
            </StackResourceSummaries>
          </ListStackResourcesResult>
          <ResponseMetadata>
            <RequestId>edf04cc2-2ff9-11e7-a7ba-bdb34b9efcc2</RequestId>
          </ResponseMetadata>
        </ListStackResourcesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:34 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeImages&Filter.1.Name=image-id&Filter.1.Value.1=ami-6869aa05&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121334Z
      X-Amz-Content-Sha256:
      - 49411f40ac5616adf21a1c49fadea20c70150dab6cafc82b472b0564dfcd060a
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=a97a36bad8b195b3de57a159ab092dbab149d1e17a69d594c6a021245c8f9e45
      Content-Length:
      - '93'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:35 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeImagesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>10a541ea-df2c-4ea1-9450-457112352b78</requestId>
            <imagesSet>
                <item>
                    <imageId>ami-6869aa05</imageId>
                    <imageLocation>amazon/amzn-ami-hvm-2016.03.3.x86_64-gp2</imageLocation>
                    <imageState>available</imageState>
                    <imageOwnerId>137112412989</imageOwnerId>
                    <creationDate>2016-06-22T06:10:37.000Z</creationDate>
                    <isPublic>true</isPublic>
                    <architecture>x86_64</architecture>
                    <imageType>machine</imageType>
                    <sriovNetSupport>simple</sriovNetSupport>
                    <imageOwnerAlias>amazon</imageOwnerAlias>
                    <name>amzn-ami-hvm-2016.03.3.x86_64-gp2</name>
                    <description>Amazon Linux AMI 2016.03.3 x86_64 HVM GP2</description>
                    <rootDeviceType>ebs</rootDeviceType>
                    <rootDeviceName>/dev/xvda</rootDeviceName>
                    <blockDeviceMapping>
                        <item>
                            <deviceName>/dev/xvda</deviceName>
                            <ebs>
                                <snapshotId>snap-25dd2ac1</snapshotId>
                                <volumeSize>8</volumeSize>
                                <deleteOnTermination>true</deleteOnTermination>
                                <volumeType>gp2</volumeType>
                                <encrypted>false</encrypted>
                            </ebs>
                        </item>
                    </blockDeviceMapping>
                    <virtualizationType>hvm</virtualizationType>
                    <hypervisor>xen</hypervisor>
                    <enaSupport>true</enaSupport>
                </item>
            </imagesSet>
        </DescribeImagesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:35 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeVpcs&Filter.1.Name=vpc-id&Filter.1.Value.1=vpc-8cf117f5&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121335Z
      X-Amz-Content-Sha256:
      - d83921c68b92f6354eaa5855e8e375b295cbdc6b2f77e711009e0401c7bbdc99
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=10eb133c5d3d36c368c2959da8defe74a81213d842310fcf643ba68684ccb127
      Content-Length:
      - '89'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:35 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeVpcsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>be3bbbca-f603-4112-ad61-ecb4b5fbd9f1</requestId>
            <vpcSet>
                <item>
                    <vpcId>vpc-8cf117f5</vpcId>
                    <state>available</state>
                    <cidrBlock>10.2.0.0/16</cidrBlock>
                    <dhcpOptionsId>dopt-f24ff99c</dhcpOptionsId>
                    <tagSet>
                        <item>
                            <key>EmsRefreshSpecStack-key2</key>
                            <value>EmsRefreshSpecStack-value2</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:stack-id</key>
                            <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:logical-id</key>
                            <value>VPC</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:stack-name</key>
                            <value>EmsRefreshSpecStack</value>
                        </item>
                        <item>
                            <key>Application</key>
                            <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</value>
                        </item>
                        <item>
                            <key>EmsRefreshSpecStack-key1</key>
                            <value>EmsRefreshSpecStack-value1</value>
                        </item>
                    </tagSet>
                    <instanceTenancy>default</instanceTenancy>
                    <isDefault>false</isDefault>
                </item>
            </vpcSet>
        </DescribeVpcsResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:35 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeSubnets&Filter.1.Name=subnet-id&Filter.1.Value.1=subnet-2190b144&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121335Z
      X-Amz-Content-Sha256:
      - 30b50976f2a2392877af56a0806ed2c738f82272ff3b7a3538804ec45b3062d2
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=1587ac0321427b1868e0172f7d1d59945b57ab24b1514efd80fe63c0633f47e8
      Content-Length:
      - '98'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:36 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeSubnetsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>c4eb33ce-75d3-4fc5-9111-cecdacc56217</requestId>
            <subnetSet>
                <item>
                    <subnetId>subnet-2190b144</subnetId>
                    <state>available</state>
                    <vpcId>vpc-8cf117f5</vpcId>
                    <cidrBlock>10.2.0.0/24</cidrBlock>
                    <ipv6CidrBlockAssociationSet/>
                    <availableIpAddressCount>250</availableIpAddressCount>
                    <availabilityZone>us-east-1c</availabilityZone>
                    <defaultForAz>false</defaultForAz>
                    <mapPublicIpOnLaunch>false</mapPublicIpOnLaunch>
                    <tagSet>
                        <item>
                            <key>EmsRefreshSpecStack-key1</key>
                            <value>EmsRefreshSpecStack-value1</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:logical-id</key>
                            <value>Subnet</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:stack-name</key>
                            <value>EmsRefreshSpecStack</value>
                        </item>
                        <item>
                            <key>EmsRefreshSpecStack-key2</key>
                            <value>EmsRefreshSpecStack-value2</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:stack-id</key>
                            <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</value>
                        </item>
                        <item>
                            <key>Application</key>
                            <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</value>
                        </item>
                    </tagSet>
                    <assignIpv6AddressOnCreation>false</assignIpv6AddressOnCreation>
                </item>
            </subnetSet>
        </DescribeSubnetsResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:36 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeSecurityGroups&Filter.1.Name=group-id&Filter.1.Value.1=sg-76c10f08&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121336Z
      X-Amz-Content-Sha256:
      - 762684248aa154b53e9793adb594ba138abf5f62e27e94560e6e4bfaa492a511
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=572b44f707fe15721400c1f442087a7fea6a090c20128d2e176250a95c6b4fc3
      Content-Length:
      - '100'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:36 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeSecurityGroupsResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>b2d48b6a-b6ab-454b-a33b-cf94e4c0f535</requestId>
            <securityGroupInfo>
                <item>
                    <ownerId>200278856672</ownerId>
                    <groupId>sg-76c10f08</groupId>
                    <groupName>EmsRefreshSpecStack-InstanceSecurityGroup-QS2FPLKQ8HEF</groupName>
                    <groupDescription>Enable SSH access via port 22</groupDescription>
                    <vpcId>vpc-8cf117f5</vpcId>
                    <ipPermissions>
                        <item>
                            <ipProtocol>tcp</ipProtocol>
                            <fromPort>80</fromPort>
                            <toPort>80</toPort>
                            <groups/>
                            <ipRanges>
                                <item>
                                    <cidrIp>0.0.0.0/0</cidrIp>
                                </item>
                            </ipRanges>
                            <ipv6Ranges/>
                            <prefixListIds/>
                        </item>
                        <item>
                            <ipProtocol>tcp</ipProtocol>
                            <fromPort>22</fromPort>
                            <toPort>22</toPort>
                            <groups/>
                            <ipRanges>
                                <item>
                                    <cidrIp>0.0.0.0/0</cidrIp>
                                </item>
                            </ipRanges>
                            <ipv6Ranges/>
                            <prefixListIds/>
                        </item>
                    </ipPermissions>
                    <ipPermissionsEgress>
                        <item>
                            <ipProtocol>-1</ipProtocol>
                            <groups/>
                            <ipRanges>
                                <item>
                                    <cidrIp>0.0.0.0/0</cidrIp>
                                </item>
                            </ipRanges>
                            <ipv6Ranges/>
                            <prefixListIds/>
                        </item>
                    </ipPermissionsEgress>
                    <tagSet>
                        <item>
                            <key>aws:cloudformation:stack-id</key>
                            <value>arn:aws:cloudformation:us-east-1:200278856672:stack/EmsRefreshSpecStack/b4e06950-2fed-11e7-bd93-500c286374d1</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:logical-id</key>
                            <value>InstanceSecurityGroup</value>
                        </item>
                        <item>
                            <key>EmsRefreshSpecStack-key1</key>
                            <value>EmsRefreshSpecStack-value1</value>
                        </item>
                        <item>
                            <key>aws:cloudformation:stack-name</key>
                            <value>EmsRefreshSpecStack</value>
                        </item>
                        <item>
                            <key>EmsRefreshSpecStack-key2</key>
                            <value>EmsRefreshSpecStack-value2</value>
                        </item>
                    </tagSet>
                </item>
            </securityGroupInfo>
        </DescribeSecurityGroupsResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:36 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeAddresses&Filter.1.Name=allocation-id&Filter.1.Value.1=eipalloc-9a4472ab&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121336Z
      X-Amz-Content-Sha256:
      - 221864a389b351f654f1fcc20f3f5102ef53dec1a9a58c912d80615ad8df829d
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=a5fd7eb1a7a9187f3e11b88c4821bd4e4052762a0070a41cefa33930af7150f5
      Content-Length:
      - '106'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:37 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeAddressesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>524466f4-e1ca-4d10-b0c4-92e132ccae7f</requestId>
            <addressesSet>
                <item>
                    <publicIp>34.202.178.10</publicIp>
                    <allocationId>eipalloc-9a4472ab</allocationId>
                    <domain>vpc</domain>
                    <instanceId>i-0bca58e6e540ddc39</instanceId>
                    <associationId>eipassoc-13766e23</associationId>
                    <networkInterfaceId>eni-8fefae9b</networkInterfaceId>
                    <networkInterfaceOwnerId>200278856672</networkInterfaceOwnerId>
                    <privateIpAddress>10.2.0.239</privateIpAddress>
                </item>
            </addressesSet>
        </DescribeAddressesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:37 GMT
- request:
    method: post
    uri: https://ec2.us-east-1.amazonaws.com/
    body:
      encoding: UTF-8
      string: Action=DescribeVolumes&Filter.1.Name=volume-id&Filter.1.Value.1=vol-0628a6ce987d4cb6e&Version=2016-11-15
    headers:
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf-8
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby2/2.8.14 ruby/2.3.0 x86_64-linux resources
      X-Amz-Date:
      - 20170503T121337Z
      X-Amz-Content-Sha256:
      - cf241b29f183a60d0fc138fb38118908f6aff6b0a278f322fe3e315c9d1207c2
      Authorization:
      - AWS4-HMAC-SHA256 Credential=AMAZON_CLIENT_ID/20170503/us-east-1/ec2/aws4_request,
        SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=f100dd4332dd208cae649053f6299896793d748396099ec61c950b229379d403
      Content-Length:
      - '104'
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/xml;charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 03 May 2017 12:13:37 GMT
      Server:
      - AmazonEC2
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <DescribeVolumesResponse xmlns="http://ec2.amazonaws.com/doc/2016-11-15/">
            <requestId>5ebd6f0e-bfa2-4cfc-acb3-a625f873f321</requestId>
            <volumeSet>
                <item>
                    <volumeId>vol-0628a6ce987d4cb6e</volumeId>
                    <size>8</size>
                    <snapshotId>snap-25dd2ac1</snapshotId>
                    <availabilityZone>us-east-1c</availabilityZone>
                    <status>in-use</status>
                    <createTime>2017-05-03T10:47:07.722Z</createTime>
                    <attachmentSet>
                        <item>
                            <volumeId>vol-0628a6ce987d4cb6e</volumeId>
                            <instanceId>i-0bca58e6e540ddc39</instanceId>
                            <device>/dev/xvda</device>
                            <status>attached</status>
                            <attachTime>2017-05-03T10:47:07.000Z</attachTime>
                            <deleteOnTermination>true</deleteOnTermination>
                        </item>
                    </attachmentSet>
                    <volumeType>gp2</volumeType>
                    <iops>100</iops>
                    <encrypted>false</encrypted>
                </item>
            </volumeSet>
        </DescribeVolumesResponse>
    http_version: 
  recorded_at: Wed, 03 May 2017 12:13:38 GMT
recorded_with: VCR 3.0.3
